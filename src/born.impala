struct BornIon {
    charge: Charge,
    radius: f64
}

fn extpot_local(pos: &[f64 * 3], ion: &BornIon) -> f64 {
    potpref * (*ion).charge.val / epsSigma / euclidean(pos, (*ion).charge.pos)
}

fn extpot_nonlocal(pos: &[f64 * 3], ion: &BornIon) -> f64 {
    let r  = euclidean(pos, (*ion).charge.pos);
    let nu = sqrt(epsSigma / epsInf) * (*ion).radius / lambda;
    potpref * (*ion).charge.val * (1./r + 1./(*ion).radius/epsSigma * (1. - epsSigma + (epsSigma - epsInf)/epsInf * sinh(nu)/nu * exp(-nu)))
}
