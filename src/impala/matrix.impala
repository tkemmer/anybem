struct LaplacePotMat {
	loc:      LocalityType,
	xis:      fn()             -> NodeBuffer,
	elements: fn()             -> SurfaceElementBuffer,
	size:     fn()             -> (Index, Index),
	get:      fn(Index, Index) -> Real
}

fn new_laplace_potmat(loc: LocalityType, xis: NodeBuffer, elements: SurfaceElementBuffer) -> LaplacePotMat {
	LaplacePotMat {
		loc:      loc,
		xis:      ||    xis,
		elements: ||    elements,
		size:     ||    (xis.size(), elements.size()),
		get:      |i,j| if loc == SingleLayer {
			laplacepot_single(xis.get(i).pos(), elements.get(j))
		} else {
			laplacepot_double(xis.get(i).pos(), elements.get(j))
		}
	}
}

fn dump_laplace_potmat(mat: LaplacePotMat) -> () {
	let (r, c) = mat.size();
	print_index(r); print_string(" x "); print_index(c);
	print_string(" LaplacePotMat");
	if mat.loc == SingleLayer { print_string("{SingleLayer}"); } else { print_string("{DoubleLayer}"); }
	print_string("\n");
}
